{"version":3,"sources":["component/PhoneBook/PhoneBook.module.css","component/Filter/Filter.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reduser.js","redux/store.js","redux/contacts/contacts-selectors.js","redux/contacts/contacts-operations.js","component/InputForm/InputForm.js","component/PhoneBook/PhoneBook.js","component/Filter/Filter.js","App.js","index.js","component/InputForm/InputForm.module.css"],"names":["module","exports","phoneBookActions","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","contacts","createReducer","_","payload","state","filter","id","error","combineReducers","store","configureStore","reducer","phoneBookReducer","devTools","process","getContacts","getVisibleContacts","createSelector","normalizedContacts","toLowerCase","text","name","includes","filteredContacts","map","contact","axios","defaults","baseURL","contactOperation","fetchContact","dispatch","a","get","data","addContact","number","shortid","generate","post","deleteContact","delete","InputForm","useState","setName","setNumber","useDispatch","useSelector","reset","handelChange","event","currentTarget","value","className","style","Form","onSubmit","preventDefault","find","alert","toast","success","warn","FormInput","onChange","type","pattern","title","required","button","Phonebook","filterContacts","itemContainer","item","deleteButton","onClick","centr","Filter","FilterContainer","FilterInput","App","useEffect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.66bd4695.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"PhoneBook_item__ynRyE\",\"deleteButton\":\"PhoneBook_deleteButton__1Boee\",\"centr\":\"PhoneBook_centr__Raejf\",\"itemContainer\":\"PhoneBook_itemContainer__2MiyP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FilterInput\":\"Filter_FilterInput__1mIRU\",\"FilterContainer\":\"Filter_FilterContainer__aFSoQ\"};","import { createAction } from \"@reduxjs/toolkit\";\n// import shortid from \"shortid\";\n\n// const addContact = createAction(\"contacts/addContact\", ({ name, number }) => ({\n//   payload: {\n//     id: shortid.generate(),\n//     name,\n//     number,\n//   },\n// }));\n\n// // console.log(addContact);\n\n// const deleteContact = createAction(\"contacts/deleteContact\");\n// // console.log(deleteContact);\n\n// const changeFilter = createAction(\"contacts/changeFilter\");\n\n// const phoneBookActions = { addContact, deleteContact, changeFilter };\n\n// export default phoneBookActions;\n\nexport const fetchContactsRequest = createAction(\n  \"contacts/fetchContactsRequest\"\n);\nexport const fetchContactsSuccess = createAction(\n  \"contacts/fetchContactsSuccess\"\n);\nexport const fetchContactsError = createAction(\"contacts/fetchContactsError\");\n\nexport const addContactRequest = createAction(\"contacts/addContactRequest\");\nexport const addContactSuccess = createAction(\"contacts/addContactSuccess\");\nexport const addContactError = createAction(\"contacts/addContactError\");\n\nexport const deleteContactRequest = createAction(\n  \"contacts/deleteContactRequest\"\n);\nexport const deleteContactSuccess = createAction(\n  \"contacts/deleteContactSuccess\"\n);\nexport const deleteContactError = createAction(\"contacts/deleteContactError\");\n\nexport const changeFilter = createAction(\"contacts/changeFilter\");\n\nconst phoneBookActions = {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n};\n\nexport default phoneBookActions;\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport phoneBookActions from \"./contacts-actions\";\n\nconst contacts = createReducer([], {\n  [phoneBookActions.fetchContactsSuccess]: (_, { payload }) => payload,\n  [phoneBookActions.addContactSuccess]: (state, { payload }) => {\n    return [...state, payload];\n  },\n\n  [phoneBookActions.deleteContactSuccess]: (state, { payload }) => {\n    return state.filter(({ id }) => id !== payload);\n  },\n});\n\nconst filter = createReducer(\"\", {\n  [phoneBookActions.changeFilter]: (_, { payload }) => payload,\n});\n\nconst error = createReducer(null, {});\n\nexport default combineReducers({\n  contacts,\n  filter,\n  error,\n});\n","// import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\n\n// import {\n//   // persistStore,\n//   persistReducer,\n//   FLUSH,\n//   REHYDRATE,\n//   PAUSE,\n//   PERSIST,\n//   PURGE,\n//   REGISTER,\n// } from \"redux-persist\";\n// import storage from \"redux-persist/lib/storage\";\n// import rootReducer from \"./contacts/contacts-reduser\";\n\n// const middleware = [\n//   ...getDefaultMiddleware({\n//     serializableCheck: {\n//       ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n//     },\n//   }),\n// ];\n\n// const contactsPersistConfig = {\n//   key: \"contacts\",\n//   storage,\n//   blacklist: [\"filter\", \"_persist\"],\n// };\n\n// const store = configureStore({\n//   reducer: {\n//     contacts: persistReducer(contactsPersistConfig, rootReducer),\n//   },\n//   middleware,\n//   devTools: process.env.NODE_ENV === \"development\",\n// });\n\n// // const persistor = persistStore(store);\n\n// const allElements = { store }; //+ persistor\n\n// export default allElements;\n\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport phoneBookReducer from \"./contacts/contacts-reduser\";\n\n// import {\n//   FLUSH,\n//   REHYDRATE,\n//   PAUSE,\n//   PERSIST,\n//   PURGE,\n//   REGISTER,\n// } from \"redux-persist\";\n\n// const middleware = [\n//   ...getDefaultMiddleware({\n//     serializableCheck: {\n//       ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n//     },\n//   }),\n// ];\n\nconst store = configureStore({\n  reducer: {\n    contacts: phoneBookReducer,\n  },\n\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport default store;\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const getContacts = (state) => state.contacts.contacts;\nexport const getFilter = (state) => state.contacts.filter;\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const filteredContacts = (contacts) => {\n      const normalizedContacts = filter.toLowerCase();\n      return contacts.filter((text) =>\n        text.name.toLowerCase().includes(normalizedContacts)\n      );\n    };\n    return filteredContacts(contacts);\n  }\n);\n\nexport const getIsAdded = createSelector([getContacts], (contacts) => {\n  const isAdded = (name) =>\n    contacts.map((contact) => contact.name).includes(name);\n  return isAdded;\n});\n","import axios from \"axios\";\nimport shortid from \"shortid\";\nimport phoneBookActions from \"./contacts-actions\";\n\naxios.defaults.baseURL = \"http://localhost:4040\";\n\n// axios.defaults.baseURL = \"https://618d5dd2fe09aa00174406f0.mockapi.io /contacts\";\n\nconst fetchContact = () => async (dispatch) => {\n  dispatch(phoneBookActions.fetchContactsRequest());\n\n  try {\n    const { data } = await axios.get(\"/contacts\");\n    dispatch(phoneBookActions.fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(phoneBookActions.fetchContactsError(error));\n  }\n};\n\nconst addContact = (name, number) => async (dispatch) => {\n  const contact = {\n    id: shortid.generate(),\n    name,\n    number,\n  };\n  dispatch(phoneBookActions.addContactRequest());\n\n  try {\n    const { data } = await axios.post(\"/contacts\", contact);\n    dispatch(phoneBookActions.addContactSuccess(data));\n  } catch (error) {\n    dispatch(phoneBookActions.addContactError(error));\n  }\n};\n\nconst deleteContact = (id) => async (dispatch) => {\n  dispatch(phoneBookActions.deleteContactRequest());\n\n  try {\n    await axios.delete(`/contacts/${id}`);\n    dispatch(phoneBookActions.deleteContactSuccess(id));\n  } catch (error) {\n    dispatch(phoneBookActions.deleteContactError(error));\n  }\n};\n\nconst contactOperation = {\n  fetchContact,\n  addContact,\n  deleteContact,\n};\n\nexport default contactOperation;\n","import { getContacts } from \"../../redux/contacts/contacts-selectors\";\n\n// import { getIsAdded } from '../../redux/contacts/contacts-selectors';\nimport { toast } from \"react-toastify\";\n// import shortid from 'shortid';\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport contactOperation from \"../../redux/contacts/contacts-operations\";\nimport style from \"./InputForm.module.css\";\nfunction InputForm() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  //  const nameInputId = shortid.generate();\n  // const phoneNumberInputId = shortid.generate();\n\n  const handelChange = (event) => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n\n      case \"number\":\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  // const handleSubmit = (event) => {\n  //   event.preventDefault();\n  //   if (contacts(name)) {\n  //     return toast.warn(`${name} is already in contacts.`);\n  //   } else {\n  //     dispatch(contactOperation.addContact(name, number));\n  //   }\n  //   reset();\n  // }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (name === \"\") {\n      toast.warn(\"Please enter the contact's name!\");\n      return;\n    }\n\n    if (number === \"\") {\n      toast.warn(\"Please enter the contact's phone number!\");\n      return;\n    }\n\n    if (\n      contacts.find(\n        (contact) => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      // toast.warn(`${name} is already in contacts.`);\n      alert(`${name} is already in contacts.`);\n      reset();\n      return;\n    }\n    dispatch(contactOperation.addContact(name, number));\n    toast.success(\"Contact has been added to your phonebook!\");\n    reset();\n  };\n\n  return (\n    <form className={style.Form} onSubmit={handleSubmit}>\n      <div className={style.InputForm}>\n        <label>Имя</label>\n        {/* //htmlFor={nameInputId}// */}\n        <input\n          className={style.FormInput}\n          // id={phoneNumberInputId}\n          value={name}\n          onChange={handelChange}\n          // onChange={event => setName(event.target.value)}\n\n          type=\"tex\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </div>\n\n      <div className={style.InputForm}>\n        <label>Телефон</label>\n        <input\n          className={style.FormInput}\n          // id={phoneNumberInputId}\n          value={number}\n          onChange={handelChange}\n          // onChange={event => setNumber(event.target.value)}\n          type=\"tex\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </div>\n      <button className={style.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default InputForm;\n// const mapStateToProps = ({ contacts: { contacts } }) => ({\n//   contacts,\n// });\n\n// const mapDispatchToProps = (dispatch) => ({\n//   onSubmit: ({ name, number }) =>\n//     dispatch(actions.addContact({ name, number })),\n// });\n\n// export default connect(mapStateToProps, mapDispatchToProps)(InputForm);\n","import React from \"react\";\nimport { getVisibleContacts } from \"../../redux/contacts/contacts-selectors\";\nimport contactOperation from \"../../redux/contacts/contacts-operations\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport shortid from \"shortid\";\nimport style from \"./PhoneBook.module.css\";\n\nconst Phonebook = ({ id }) => {\n  // const keyId = shortid.generate();\n  const filterContacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  const onDeleteContact = (id) => dispatch(contactOperation.deleteContact);\n  return (\n    <div className={style.itemContainer}>\n      <ul>\n        {filterContacts.map(({ name, number }) => (\n          <li className={style.item} key={shortid.generate()}>\n            <span>{name}: </span>\n            <span>{number} </span>\n            <button\n              className={style.deleteButton}\n              type=\"button\"\n              onClick={() => onDeleteContact(id)}\n            >\n              <p className={style.centr}>❌</p>\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Phonebook;\n\n// const getVisibleContacts = (allContacts, filter) => {\n//   const normalizedFilter = filter.toLowerCase();\n//   const visibleContacts = allContacts.filter(contact =>\n//     contact.name.toLowerCase().includes(normalizedFilter),\n//   );\n//   return visibleContacts;\n// };\n\n// const mapStateToProps = ({ contacts: {contacts, filter } }) => ({\n//   contacts: getVisibleContacts(contacts, filter),\n// });\n\n// const mapDispatchToProps = dispatch => ({\n//   onDelete: (name) => dispatch(phoneBookActions.deleteContact(name)),\n\n// }\n\n// )\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Phonebook);\n","import React from \"react\";\nimport style from \"./Filter.module.css\";\n// import phonebookActions from '../../redux/contacts/contacts-actions';\n// import { connect } from 'react-redux';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <>\n      <div className={style.FilterContainer}>\n        <label>Find contacts by name</label>\n        <input\n          className={style.FilterInput}\n          type=\"text\"\n          value={value}\n          onChange={onChange}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default Filter;\n\n// const mapStateToProps = state => ({\n//   value: state.contacts.filter,\n// });\n\n// const mapDispatchToProps = dispatch => ({\n//   onChange: e => dispatch(phonebookActions.changeFilter(e.target.value)),\n// });\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n// import shortid from 'shortid';\nimport InputForm from \"./component/InputForm/InputForm\";\nimport Phonebook from \"./component/PhoneBook/PhoneBook\";\nimport Filter from \"./component/Filter/Filter\";\nimport contactOperation from \"./redux/contacts/contacts-operations\";\nimport \"./App.css\";\nimport { getContacts } from \"redux/contacts/contacts-selectors\";\n// import store from './redux/store';\n// import { myAction } from './redux/contacts/contacts-actions';\n// console.log(store);\n// console.log(store.getState());\n\nfunction App() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  useEffect(() => {\n    dispatch(contactOperation.fetchContact());\n  }, [dispatch]);\n\n  return (\n    <>\n      <div className=\"container\">\n        <h1 className=\"title\"> PhoneBook </h1>\n        <InputForm />\n\n        <Filter />\n\n        {contacts && <Phonebook />}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport store from \"./redux/store\";\nimport App from \"./App\";\n\n// import { myAction } from './redux/contacts/contacts-actions';\nimport { Provider } from \"react-redux\";\n// import { BrowserRouter } from 'react-router-dom';\n// console.log(store);\n// console.log(store.getState);\n// store.dispatch(myAction(5));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <BrowserRouter> */}\n      <App />\n      {/* </BrowserRouter> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"InputForm_Form__12wPg\",\"InputForm\":\"InputForm_InputForm__2fB8z\",\"FormInput\":\"InputForm_FormInput__3XN-R\",\"button\":\"InputForm_button__CCp35\"};"],"sourceRoot":""}