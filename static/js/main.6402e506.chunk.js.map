{"version":3,"sources":["component/PhoneBook/PhoneBook.module.css","component/Filter/Filter.module.css","component/InputForm/InputForm.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reduser.js","redux/store.js","component/InputForm/InputForm.js","redux/contacts/contacts-selectors.js","redux/contacts/contacts-operations.js","component/PhoneBook/PhoneBook.js","component/Filter/Filter.js","App.js","index.js"],"names":["module","exports","phoneBookActions","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","contacts","createReducer","_","payload","state","filter","id","error","combineReducers","store","configureStore","reducer","phoneBookReducer","devTools","process","InputForm","name","number","handelChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","className","style","Form","FormInput","onChange","type","button","Component","getVisibleContacts","createSelector","items","normalizedContacts","toLowerCase","text","includes","filteredContacts","axios","defaults","baseURL","contactOperation","fetchContact","dispatch","a","get","data","addContact","contact","shortid","generate","post","deleteContact","delete","Phonebook","filterContacts","useSelector","useDispatch","itemContainer","map","item","deleteButton","onClick","centr","Filter","FilterContainer","FilterInput","App","useEffect","fetchContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6402e506.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"PhoneBook_item__ynRyE\",\"deleteButton\":\"PhoneBook_deleteButton__1Boee\",\"centr\":\"PhoneBook_centr__Raejf\",\"itemContainer\":\"PhoneBook_itemContainer__2MiyP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FilterInput\":\"Filter_FilterInput__1mIRU\",\"FilterContainer\":\"Filter_FilterContainer__aFSoQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"InputForm_Form__12wPg\",\"InputForm\":\"InputForm_InputForm__2fB8z\",\"FormInput\":\"InputForm_FormInput__3XN-R\",\"button\":\"InputForm_button__CCp35\"};","import { createAction } from \"@reduxjs/toolkit\";\n// import shortid from \"shortid\";\n\n// const addContact = createAction(\"contacts/addContact\", ({ name, number }) => ({\n//   payload: {\n//     id: shortid.generate(),\n//     name,\n//     number,\n//   },\n// }));\n\n// // console.log(addContact);\n\n// const deleteContact = createAction(\"contacts/deleteContact\");\n// // console.log(deleteContact);\n\n// const changeFilter = createAction(\"contacts/changeFilter\");\n\n// const phoneBookActions = { addContact, deleteContact, changeFilter };\n\n// export default phoneBookActions;\n\nexport const fetchContactsRequest = createAction(\n  \"contacts/fetchContactsRequest\"\n);\nexport const fetchContactsSuccess = createAction(\n  \"contacts/fetchContactsSuccess\"\n);\nexport const fetchContactsError = createAction(\"contacts/fetchContactsError\");\n\nexport const addContactRequest = createAction(\"contacts/addContactRequest\");\nexport const addContactSuccess = createAction(\"contacts/addContactSuccess\");\nexport const addContactError = createAction(\"contacts/addContactError\");\n\nexport const deleteContactRequest = createAction(\n  \"contacts/deleteContactRequest\"\n);\nexport const deleteContactSuccess = createAction(\n  \"contacts/deleteContactSuccess\"\n);\nexport const deleteContactError = createAction(\"contacts/deleteContactError\");\n\nexport const changeFilter = createAction(\"contacts/changeFilter\");\n\nconst phoneBookActions = {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n};\n\nexport default phoneBookActions;\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport phoneBookActions from \"./contacts-actions\";\n\nconst contacts = createReducer([], {\n  [phoneBookActions.fetchContactsSuccess]: (_, { payload }) => payload,\n  [phoneBookActions.addContactSuccess]: (state, { payload }) => {\n  return [ ...state, payload]\n  },\n \n  [phoneBookActions.deleteContactSuccess]: (state, { payload }) => {\n    return state.filter(({ id }) => id !== payload);\n  },\n    \n});\n\nconst filter = createReducer(\"\", {\n  [phoneBookActions.changeFilter]: (_, { payload }) => payload,\n});\n\nconst error = createReducer(null, {});\n\nexport default combineReducers({\n  contacts,\n  filter,\n   error\n});\n","// import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\n\n// import {\n//   // persistStore,\n//   persistReducer,\n//   FLUSH,\n//   REHYDRATE,\n//   PAUSE,\n//   PERSIST,\n//   PURGE,\n//   REGISTER,\n// } from \"redux-persist\";\n// import storage from \"redux-persist/lib/storage\";\n// import rootReducer from \"./contacts/contacts-reduser\";\n\n// const middleware = [\n//   ...getDefaultMiddleware({\n//     serializableCheck: {\n//       ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n//     },\n//   }),\n// ];\n\n// const contactsPersistConfig = {\n//   key: \"contacts\",\n//   storage,\n//   blacklist: [\"filter\", \"_persist\"],\n// };\n\n// const store = configureStore({\n//   reducer: {\n//     contacts: persistReducer(contactsPersistConfig, rootReducer),\n//   },\n//   middleware,\n//   devTools: process.env.NODE_ENV === \"development\",\n// });\n\n// // const persistor = persistStore(store);\n\n// const allElements = { store }; //+ persistor\n\n// export default allElements;\n\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport phoneBookReducer from \"./contacts/contacts-reduser\";\n\n// import {\n//   FLUSH,\n//   REHYDRATE,\n//   PAUSE,\n//   PERSIST,\n//   PURGE,\n//   REGISTER,\n// } from \"redux-persist\";\n\n// const middleware = [\n//   ...getDefaultMiddleware({\n//     serializableCheck: {\n//       ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n//     },\n//   }),\n// ];\n\nconst store = configureStore({\n  reducer: {\n    contacts: phoneBookReducer,\n  },\n \n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport default store;\n","import React, { Component } from \"react\";\n// import PropTypes from 'prop-types';\n// import { connect } from 'react-redux';\n// import actions from '../../redux/contacts/contacts-actions'\nimport style from \"./InputForm.module.css\";\nclass InputForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handelChange = (event) => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n    // console.log(event.currentTarget);\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    // console.log(this.state)\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form className={style.Form} onSubmit={this.handleSubmit}>\n        <div className={style.InputForm}>\n          <label>Имя</label>\n          <input\n            className={style.FormInput}\n            id=\"name\"\n            value={name}\n            onChange={this.handelChange}\n            type=\"tex\"\n            name=\"name\"\n            // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            // title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            // required\n          />\n        </div>\n\n        <div className={style.InputForm}>\n          <label>Телефон</label>\n          <input\n            className={style.FormInput}\n            id=\"number\"\n            value={number}\n            onChange={this.handelChange}\n            type=\"tex\"\n            name=\"number\"\n            // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            // title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            // required\n          />\n        </div>\n        <button className={style.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default InputForm;\n// const mapStateToProps = ({ contacts: { contacts } }) => ({\n//   contacts,\n// });\n\n// const mapDispatchToProps = (dispatch) => ({\n//   onSubmit: ({ name, number }) =>\n//     dispatch(actions.addContact({ name, number })),\n// });\n\n// export default connect(mapStateToProps, mapDispatchToProps)(InputForm);\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const getContacts = (state) => state.items;\nexport const getFilter = (state) => state.filter;\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const filteredContacts = (contacts) => {\n      const normalizedContacts = filter.toLowerCase();\n      return contacts.filter((text) =>\n        text.name.toLowerCase().includes(normalizedContacts)\n      );\n    };\n    return filteredContacts(contacts);\n  }\n);\n\n// export const getVisibleContacts = createSelector(\n//   [getContacts, getFilter],\n//   (contacts, filter) => \n    \n//       // const normalizedContacts = filter.toLowerCase();\n//       contacts.filter(text =>\n//         text.name.toLowerCase().includes(filter.toLowerCase())\n//       ),\n    \n  \n// );\n","import axios from \"axios\";\nimport shortid from \"shortid\";\nimport phoneBookActions from \"./contacts-actions\";\n\naxios.defaults.baseURL = \"http://localhost:4040\";\n\n// axios.defaults.baseURL = \"https://618d5dd2fe09aa00174406f0.mockapi.io /contacts\";\n\nconst fetchContact = () => async dispatch => {\n  dispatch(phoneBookActions.fetchContactsRequest());\n\n  try {\n    const { data } = await axios.get(\"/contacts\");\n    dispatch(phoneBookActions.fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(phoneBookActions.fetchContactsError(error));\n  }\n};\n\nconst addContact = (name, number) => async (dispatch) => {\n  const contact = {\n    id: shortid.generate(),\n    name,\n    number,\n  };\n  dispatch(phoneBookActions.addContactRequest());\n\n  try {\n    const { data } = await axios.post(\"/contacts\", contact);\n    dispatch(phoneBookActions.addContactSuccess(data));\n  } catch (error) {\n    dispatch(phoneBookActions.addContactError(error));\n  }\n};\n\nconst deleteContact = (id) => async (dispatch) => {\n  dispatch(phoneBookActions.deleteContactRequest());\n\n  try {\n    await axios.delete(`/contacts/${id}`);\n    dispatch(phoneBookActions.deleteContactSuccess(id));\n  } catch (error) {\n    dispatch(phoneBookActions.deleteContactError(id));\n  }\n};\n\nconst contactOperation = {\n  fetchContact,\n  addContact,\n  deleteContact,\n};\n\nexport default contactOperation;\n","import React from \"react\";\nimport { getVisibleContacts } from '../../redux/contacts/contacts-selectors';\nimport contactOperation from '../../redux/contacts/contacts-operations';\nimport { useDispatch } from \"react-redux\";\nimport { useSelector} from 'react-redux';\nimport shortid from \"shortid\";\nimport style from \"./PhoneBook.module.css\";\n\nconst Phonebook = ({ id}) => {\n  // const keyId = shortid.generate();\n  const filterContacts = useSelector(getVisibleContacts);\n const dispatch = useDispatch();\n\n  const onDeleteContact = id => dispatch(contactOperation.deleteContact);\n  return (\n    <div className={style.itemContainer}>\n      <ul>\n        {filterContacts.map(({ name, number }) => (\n          <li className={style.item} key={shortid.generate()}>\n            <span>{name}: </span>\n            <span>{number} </span>\n            <button\n              className={style.deleteButton}\n              type=\"button\"\n                onClick={() => onDeleteContact(id)}\n            >\n              <p className={style.centr}>❌</p>\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Phonebook;\n\n// const getVisibleContacts = (allContacts, filter) => {\n//   const normalizedFilter = filter.toLowerCase();\n//   const visibleContacts = allContacts.filter(contact =>\n//     contact.name.toLowerCase().includes(normalizedFilter),\n//   );\n//   return visibleContacts;\n// };\n\n// const mapStateToProps = ({ contacts: {contacts, filter } }) => ({\n//   contacts: getVisibleContacts(contacts, filter),\n// });\n\n// const mapDispatchToProps = dispatch => ({\n//   onDelete: (name) => dispatch(phoneBookActions.deleteContact(name)),\n\n// }\n\n// )\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Phonebook);\n","import React from \"react\";\nimport style from \"./Filter.module.css\";\n// import phonebookActions from '../../redux/contacts/contacts-actions';\n// import { connect } from 'react-redux';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <>\n      <div className={style.FilterContainer}>\n        <label>Find contacts by name</label>\n        <input\n          className={style.FilterInput}\n          type=\"text\"\n          value={value}\n          onChange={onChange}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default Filter;\n\n// const mapStateToProps = state => ({\n//   value: state.contacts.filter,\n// });\n\n// const mapDispatchToProps = dispatch => ({\n//   onChange: e => dispatch(phonebookActions.changeFilter(e.target.value)),\n// });\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\n// import shortid from 'shortid';\nimport InputForm from \"./component/InputForm/InputForm\";\nimport Phonebook from \"./component/PhoneBook/PhoneBook\";\nimport Filter from \"./component/Filter/Filter\";\nimport contactOperation from \"./redux/contacts/contacts-operations\";\nimport \"./App.css\";\n// import store from './redux/store';\n// import { myAction } from './redux/contacts/contacts-actions';\n// console.log(store);\n// console.log(store.getState());\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(contactOperation.fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <div className=\"container\">\n        <h1 className=\"title\"> PhoneBook </h1>\n        <InputForm />\n\n        <Filter />\n\n        <Phonebook />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport store from \"./redux/store\";\nimport App from \"./App\";\n\n// import { myAction } from './redux/contacts/contacts-actions';\nimport { Provider } from \"react-redux\";\n// import { BrowserRouter } from 'react-router-dom';\n// console.log(store);\n// console.log(store.getState);\n// store.dispatch(myAction(5));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <BrowserRouter> */}\n      <App />\n      {/* </BrowserRouter> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}